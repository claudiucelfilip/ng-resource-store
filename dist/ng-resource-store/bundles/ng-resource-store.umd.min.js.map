{"version":3,"sources":["ng://ng-resource-store/lib/ng-resource-store.service.ts","ng://ng-resource-store/lib/ng-resource-store.directive.ts","ng://ng-resource-store/lib/ng-resource-store.module.ts"],"names":["NgResourceStoreService","Injectable","args","providedIn","NgResourceStoreDirective","tpl","vcf","store","this","selectedKeys","prototype","ngOnInit","updateView","Object","defineProperty","key","resource","Resource","get","context","$implicit","createEmbeddedView","Directive","selector","TemplateRef","ViewContainerRef","ResourceStore","Input","NgResourceStoreModule","forStore","options","ngModule","providers","provide","useFactory","NgModule","declarations","exports"],"mappings":"kUAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAeE,SAAAA,EAAoBC,EAA+BC,EAA+BC,GAA9DC,KAAAH,IAAAA,EAA+BG,KAAAF,IAAAA,EAA+BE,KAAAD,MAAAA,EADlFC,KAAAC,aAAyB,GAwB3B,OApBEL,EAAAM,UAAAC,SAAA,WACEH,KAAKI,cAGPC,OAAAC,eACIV,EAAAM,UAAA,iBAAc,KADlB,SACoBK,OACdC,EAEFA,EADED,aAAeE,EAAAA,SACNF,EAEAP,KAAKD,MAAMW,IAAIH,GAG5BP,KAAKW,QAAUH,EACfR,KAAKW,QAAQC,UAAYJ,mCAGnBZ,EAAAM,UAAAE,WAAR,WACEJ,KAAKF,IAAIe,mBAAmBb,KAAKH,IAAKG,KAAKW,8BA3B9CG,EAAAA,UAASpB,KAAA,CAAC,CACTqB,SAAU,4DAVQC,EAAAA,mBAAgCC,EAAAA,wBAC3CC,EAAAA,yDAqBNC,EAAAA,SAgBHvB,EAtCA,GCAAwB,EAAA,WAKA,SAAAA,KAiBA,OAZSA,EAAAC,SAAP,SAAgBC,OACVvB,EAAQ,IAAImB,EAAAA,cAAcI,GAC9B,MAAO,CACLC,SAAUH,EACVI,UAAW,CACT,CACEC,QAASP,EAAAA,cACTQ,WAAY,WAAM,OAAA3B,2BAZ3B4B,EAAAA,SAAQjC,KAAA,CAAC,CACRkC,aAAc,CAAChC,GACfiC,QAAS,CAACjC,OAeZwB,EAtBA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgResourceStoreService {\n\n  constructor() { }\n}\n","import { Directive, TemplateRef, ElementRef, Input, ViewContainerRef } from '@angular/core';\nimport { ResourceStore, Resource } from 'resource-store';\nimport { BehaviorSubject } from 'rxjs';\n\n\nexport interface ResourceContext extends Resource {\n  $implicit?: any;\n}\n\n@Directive({\n  selector: '[rsResource]'\n})\nexport class NgResourceStoreDirective {\n  context: ResourceContext;\n  selectedKeys: string[] = [];\n  constructor(private tpl: TemplateRef<any>, private vcf: ViewContainerRef, private store: ResourceStore) {\n  }\n\n  ngOnInit () {\n    this.updateView();\n  }\n\n  @Input()\n  set rsResourceFrom (key: string | Resource) {\n    let resource: ResourceContext;\n    if (key instanceof Resource) {\n      resource = key;\n    } else {\n      resource = this.store.get(key);\n    }\n\n    this.context = resource;\n    this.context.$implicit = resource;\n  }\n\n  private updateView () {\n    this.vcf.createEmbeddedView(this.tpl, this.context);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgResourceStoreDirective } from './ng-resource-store.directive';\nimport { IResourceOptions, ResourceStore } from 'resource-store';\nimport * as SoreProps from 'resource-store';\n\n@NgModule({\n  declarations: [NgResourceStoreDirective],\n  exports: [NgResourceStoreDirective]\n})\nexport class NgResourceStoreModule {\n  static forStore(options) {\n    let store = new ResourceStore(options);\n    return {\n      ngModule: NgResourceStoreModule,\n      providers: [\n        { \n          provide: ResourceStore,\n          useFactory: () => store\n        }\n      ]\n    }\n  }\n}\n"]}