{"version":3,"file":"ng-resource-store.umd.js.map","sources":["ng://ng-resource-store/lib/ng-resource-store.service.ts","ng://ng-resource-store/lib/ng-resource-store.directive.ts","ng://ng-resource-store/lib/ng-resource-store.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgResourceStoreService {\n\n  constructor() { }\n}\n","import { Directive, TemplateRef, ElementRef, Input, ViewContainerRef } from '@angular/core';\nimport { ResourceStore, Resource } from 'resource-store';\nimport { BehaviorSubject } from 'rxjs';\n\n\nexport interface ResourceContext extends Resource {\n  $implicit?: any;\n}\n\n@Directive({\n  selector: '[rsResource]'\n})\nexport class NgResourceStoreDirective {\n  context: ResourceContext;\n  selectedKeys: string[] = [];\n  constructor(private tpl: TemplateRef<any>, private vcf: ViewContainerRef, private store: ResourceStore) {\n  }\n\n  ngOnInit () {\n    this.updateView();\n  }\n\n  @Input()\n  set rsResourceFrom (key: string | Resource) {\n    let resource: ResourceContext;\n    if (key instanceof Resource) {\n      resource = key;\n    } else {\n      resource = this.store.get(key);\n    }\n\n    this.context = resource;\n    this.context.$implicit = resource;\n  }\n\n  private updateView () {\n    this.vcf.createEmbeddedView(this.tpl, this.context);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgResourceStoreDirective } from './ng-resource-store.directive';\nimport { IResourceOptions, ResourceStore } from 'resource-store';\nimport * as SoreProps from 'resource-store';\n\n@NgModule({\n  declarations: [NgResourceStoreDirective],\n  exports: [NgResourceStoreDirective]\n})\nexport class NgResourceStoreModule {\n  static forStore(options) {\n    let store = new ResourceStore(options);\n    return {\n      ngModule: NgResourceStoreModule,\n      providers: [\n        { \n          provide: ResourceStore,\n          useFactory: () => store\n        }\n      ]\n    }\n  }\n}\n"],"names":["Injectable","Resource","Directive","TemplateRef","ViewContainerRef","ResourceStore","Input","NgModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;qCAJD;KAQC;;;;;;ACRD;QAeE,kCAAoB,GAAqB,EAAU,GAAqB,EAAU,KAAoB;YAAlF,QAAG,GAAH,GAAG,CAAkB;YAAU,QAAG,GAAH,GAAG,CAAkB;YAAU,UAAK,GAAL,KAAK,CAAe;YADtG,iBAAY,GAAa,EAAE,CAAC;SAE3B;;;;QAED,2CAAQ;;;YAAR;gBACE,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QAED,sBACI,oDAAc;;;;gBADlB,UACoB,GAAsB;;oBACpC,QAAyB;gBAC7B,IAAI,GAAG,YAAYC,sBAAQ,EAAE;oBAC3B,QAAQ,GAAG,GAAG,CAAC;iBAChB;qBAAM;oBACL,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;aACnC;;;WAAA;;;;QAEO,6CAAU;;;YAAlB;gBACE,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACrD;;oBA5BFC,YAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;qBACzB;;;;wBAXmBC,cAAW;wBAAqBC,mBAAgB;wBAC3DC,2BAAa;;;;qCAqBnBC,QAAK;;QAgBR,+BAAC;KAAA;;;;;;ACtCD;QAKA;SAiBC;;;;;QAZQ,8BAAQ;;;;YAAf,UAAgB,OAAO;;oBACjB,KAAK,GAAG,IAAID,2BAAa,CAAC,OAAO,CAAC;gBACtC,OAAO;oBACL,QAAQ,EAAE,qBAAqB;oBAC/B,SAAS,EAAE;wBACT;4BACE,OAAO,EAAEA,2BAAa;4BACtB,UAAU,EAAE,cAAM,OAAA,KAAK,GAAA;yBACxB;qBACF;iBACF,CAAA;aACF;;oBAhBFE,WAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;wBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;qBACpC;;QAcD,4BAAC;KAAA;;;;;;;;;;;;;;;;;;;;;;;;"}
