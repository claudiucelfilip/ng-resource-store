{"version":3,"file":"ng-resource-store.js.map","sources":["ng://ng-resource-store/lib/ng-resource-store.service.ts","ng://ng-resource-store/lib/ng-resource-store.directive.ts","ng://ng-resource-store/lib/ng-resource-store.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgResourceStoreService {\n\n  constructor() { }\n}\n","import { Directive, TemplateRef, ElementRef, Input, ViewContainerRef } from '@angular/core';\nimport { ResourceStore, Resource } from 'resource-store';\nimport { BehaviorSubject } from 'rxjs';\n\n\nexport interface ResourceContext extends Resource {\n  $implicit?: any;\n}\n\n@Directive({\n  selector: '[rsResource]'\n})\nexport class NgResourceStoreDirective {\n  context: ResourceContext;\n  selectedKeys: string[] = [];\n  constructor(private tpl: TemplateRef<any>, private vcf: ViewContainerRef, private store: ResourceStore) {\n  }\n\n  ngOnInit () {\n    this.updateView();\n  }\n\n  @Input()\n  set rsResourceFrom (key: string | Resource) {\n    let resource: ResourceContext;\n    if (key instanceof Resource) {\n      resource = key;\n    } else {\n      resource = this.store.get(key);\n    }\n\n    this.context = resource;\n    this.context.$implicit = resource;\n  }\n\n  private updateView () {\n    this.vcf.createEmbeddedView(this.tpl, this.context);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgResourceStoreDirective } from './ng-resource-store.directive';\nimport { IResourceOptions, ResourceStore } from 'resource-store';\nimport * as SoreProps from 'resource-store';\n\n@NgModule({\n  declarations: [NgResourceStoreDirective],\n  exports: [NgResourceStoreDirective]\n})\nexport class NgResourceStoreModule {\n  static forStore(options) {\n    let store = new ResourceStore(options);\n    return {\n      ngModule: NgResourceStoreModule,\n      providers: [\n        { \n          provide: ResourceStore,\n          useFactory: () => store\n        }\n      ]\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;iCAJD;CAQC;;;;;;ACRD;IAeE,kCAAoB,GAAqB,EAAU,GAAqB,EAAU,KAAoB;QAAlF,QAAG,GAAH,GAAG,CAAkB;QAAU,QAAG,GAAH,GAAG,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAe;QADtG,iBAAY,GAAa,EAAE,CAAC;KAE3B;;;;IAED,2CAAQ;;;IAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,sBACI,oDAAc;;;;;QADlB,UACoB,GAAsB;;gBACpC,QAAyB;YAC7B,IAAI,GAAG,YAAY,QAAQ,EAAE;gBAC3B,QAAQ,GAAG,GAAG,CAAC;aAChB;iBAAM;gBACL,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAChC;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;SACnC;;;OAAA;;;;IAEO,6CAAU;;;IAAlB;QACE,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;;gBA5BF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;iBACzB;;;gBAXmB,WAAW;gBAAqB,gBAAgB;gBAC3D,aAAa;;;iCAqBnB,KAAK;;IAgBR,+BAAC;CAAA;;;;;;ACtCD;IAKA;KAiBC;;;;;IAZQ,8BAAQ;;;;IAAf,UAAgB,OAAO;;YACjB,KAAK,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC;QACtC,OAAO;YACL,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,aAAa;oBACtB,UAAU,EAAE,cAAM,OAAA,KAAK,GAAA;iBACxB;aACF;SACF,CAAA;KACF;;gBAhBF,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;iBACpC;;IAcD,4BAAC;CAAA;;;;;;;;;;;;;;"}
